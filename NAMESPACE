import(graphics)
import(methods)
import(stats)
import(datasets)
import(utils)
import(grDevices)
exportPattern("^[[:alpha:]]+")
useDynLib(spMC, .registration = TRUE)
if(getRversion() >= "3.6.0") {
    S3method(spMC::boxplot, lengths)
    S3method(spMC::contour, pemt)
    S3method(spMC::density, lengths)
    S3method(spMC::hist, lengths)
    S3method(spMC::image, multi_tpfit)
    S3method(spMC::image, pemt)
#    S3method(spMC::is, lengths)
#    S3method(spMC::is, multi_tpfit)
#    S3method(spMC::is, multi_transiogram)
#    S3method(spMC::is, pemt)
#    S3method(spMC::is, tpfit)
#    S3method(spMC::is, transiogram)
    S3method(spMC::persp, multi_tpfit)
    S3method(spMC::persp, pemt)
    S3method(spMC::plot, density.lengths)
    S3method(spMC::plot, hist.lengths)
    S3method(spMC::plot, lengths)
    S3method(spMC::plot, transiogram)
    S3method(spMC::predict, multi_tpfit)
    S3method(spMC::predict, tpfit)
    S3method(spMC::print, density.lengths)
    S3method(spMC::print, lengths)
    S3method(spMC::print, multi_tpfit)
    S3method(spMC::print, multi_transiogram)
    S3method(spMC::print, summary.lengths)
    S3method(spMC::print, tpfit)
    S3method(spMC::print, transiogram)
    S3method(spMC::summary, lengths)
} else {
    S3method(boxplot, lengths)
    S3method(contour, pemt)
    S3method(density, lengths)
    S3method(hist, lengths)
    S3method(image, multi_tpfit)
    S3method(image, pemt)
#    S3method(is, lengths)
#    S3method(is, multi_tpfit)
#    S3method(is, multi_transiogram)
#    S3method(is, pemt)
#    S3method(is, tpfit)
#    S3method(is, transiogram)
    S3method(persp, multi_tpfit)
    S3method(persp, pemt)
    S3method(plot, density.lengths)
    S3method(plot, hist.lengths)
    S3method(plot, lengths)
    S3method(plot, transiogram)
    S3method(predict, multi_tpfit)
    S3method(predict, tpfit)
    S3method(print, density.lengths)
    S3method(print, lengths)
    S3method(print, multi_tpfit)
    S3method(print, multi_transiogram)
    S3method(print, summary.lengths)
    S3method(print, tpfit)
    S3method(print, transiogram)
    S3method(summary, lengths)
}
